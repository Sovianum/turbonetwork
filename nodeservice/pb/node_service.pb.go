// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node_service.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	node_service.proto

It has these top-level messages:
	Empty
	StateResponse
	ModifyResponse
	BaseResponse
	NodeState
	ServiceDescription
	NodeDescription
	LinkRequest
	UpdateRequest
	GetStateRequest
	CreateRequest
	Identifiers
	PortIdentifier
	NodeIdentifier
	RequestData
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LinkType int32

const (
	LinkType_SIMPLE      LinkType = 0
	LinkType_WEAK_FIRST  LinkType = 1
	LinkType_WEAK_SECOND LinkType = 2
	LinkType_WEAK_BOTH   LinkType = 3
)

var LinkType_name = map[int32]string{
	0: "SIMPLE",
	1: "WEAK_FIRST",
	2: "WEAK_SECOND",
	3: "WEAK_BOTH",
}
var LinkType_value = map[string]int32{
	"SIMPLE":      0,
	"WEAK_FIRST":  1,
	"WEAK_SECOND": 2,
	"WEAK_BOTH":   3,
}

func (x LinkType) String() string {
	return proto.EnumName(LinkType_name, int32(x))
}
func (LinkType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StateResponse struct {
	Base  *BaseResponse                 `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Items []*StateResponse_UnitResponse `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *StateResponse) Reset()                    { *m = StateResponse{} }
func (m *StateResponse) String() string            { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()               {}
func (*StateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StateResponse) GetBase() *BaseResponse {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *StateResponse) GetItems() []*StateResponse_UnitResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

type StateResponse_UnitResponse struct {
	Base       *BaseResponse   `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Identifier *NodeIdentifier `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	State      *NodeState      `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
}

func (m *StateResponse_UnitResponse) Reset()                    { *m = StateResponse_UnitResponse{} }
func (m *StateResponse_UnitResponse) String() string            { return proto.CompactTextString(m) }
func (*StateResponse_UnitResponse) ProtoMessage()               {}
func (*StateResponse_UnitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *StateResponse_UnitResponse) GetBase() *BaseResponse {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *StateResponse_UnitResponse) GetIdentifier() *NodeIdentifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *StateResponse_UnitResponse) GetState() *NodeState {
	if m != nil {
		return m.State
	}
	return nil
}

type ModifyResponse struct {
	Base  *BaseResponse                  `protobuf:"bytes,1,opt,name=base" json:"base,omitempty"`
	Items []*ModifyResponse_UnitResponse `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *ModifyResponse) Reset()                    { *m = ModifyResponse{} }
func (m *ModifyResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyResponse) ProtoMessage()               {}
func (*ModifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ModifyResponse) GetBase() *BaseResponse {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *ModifyResponse) GetItems() []*ModifyResponse_UnitResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

type ModifyResponse_UnitResponse struct {
	Identifiers []*NodeIdentifier `protobuf:"bytes,1,rep,name=identifiers" json:"identifiers,omitempty"`
	Base        *BaseResponse     `protobuf:"bytes,2,opt,name=base" json:"base,omitempty"`
}

func (m *ModifyResponse_UnitResponse) Reset()                    { *m = ModifyResponse_UnitResponse{} }
func (m *ModifyResponse_UnitResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyResponse_UnitResponse) ProtoMessage()               {}
func (*ModifyResponse_UnitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *ModifyResponse_UnitResponse) GetIdentifiers() []*NodeIdentifier {
	if m != nil {
		return m.Identifiers
	}
	return nil
}

func (m *ModifyResponse_UnitResponse) GetBase() *BaseResponse {
	if m != nil {
		return m.Base
	}
	return nil
}

type BaseResponse struct {
	Status      int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *BaseResponse) Reset()                    { *m = BaseResponse{} }
func (m *BaseResponse) String() string            { return proto.CompactTextString(m) }
func (*BaseResponse) ProtoMessage()               {}
func (*BaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BaseResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BaseResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type NodeState struct {
	Name         string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumValues    map[string]float64    `protobuf:"bytes,2,rep,name=numValues" json:"numValues,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	StringValues map[string]string     `protobuf:"bytes,3,rep,name=stringValues" json:"stringValues,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Children     map[string]*NodeState `protobuf:"bytes,4,rep,name=children" json:"children,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *NodeState) Reset()                    { *m = NodeState{} }
func (m *NodeState) String() string            { return proto.CompactTextString(m) }
func (*NodeState) ProtoMessage()               {}
func (*NodeState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *NodeState) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeState) GetNumValues() map[string]float64 {
	if m != nil {
		return m.NumValues
	}
	return nil
}

func (m *NodeState) GetStringValues() map[string]string {
	if m != nil {
		return m.StringValues
	}
	return nil
}

func (m *NodeState) GetChildren() map[string]*NodeState {
	if m != nil {
		return m.Children
	}
	return nil
}

type ServiceDescription struct {
	Description string             `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Nodes       []*NodeDescription `protobuf:"bytes,2,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *ServiceDescription) Reset()                    { *m = ServiceDescription{} }
func (m *ServiceDescription) String() string            { return proto.CompactTextString(m) }
func (*ServiceDescription) ProtoMessage()               {}
func (*ServiceDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ServiceDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServiceDescription) GetNodes() []*NodeDescription {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type NodeDescription struct {
	Type        string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *NodeDescription) Reset()                    { *m = NodeDescription{} }
func (m *NodeDescription) String() string            { return proto.CompactTextString(m) }
func (*NodeDescription) ProtoMessage()               {}
func (*NodeDescription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *NodeDescription) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NodeDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type LinkRequest struct {
	Items []*LinkRequest_UnitRequest `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *LinkRequest) Reset()                    { *m = LinkRequest{} }
func (m *LinkRequest) String() string            { return proto.CompactTextString(m) }
func (*LinkRequest) ProtoMessage()               {}
func (*LinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *LinkRequest) GetItems() []*LinkRequest_UnitRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type LinkRequest_UnitRequest struct {
	LinkType LinkType        `protobuf:"varint,1,opt,name=linkType,enum=nodeservice.LinkType" json:"linkType,omitempty"`
	Id1      *PortIdentifier `protobuf:"bytes,2,opt,name=id1" json:"id1,omitempty"`
	Id2      *PortIdentifier `protobuf:"bytes,3,opt,name=id2" json:"id2,omitempty"`
}

func (m *LinkRequest_UnitRequest) Reset()                    { *m = LinkRequest_UnitRequest{} }
func (m *LinkRequest_UnitRequest) String() string            { return proto.CompactTextString(m) }
func (*LinkRequest_UnitRequest) ProtoMessage()               {}
func (*LinkRequest_UnitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

func (m *LinkRequest_UnitRequest) GetLinkType() LinkType {
	if m != nil {
		return m.LinkType
	}
	return LinkType_SIMPLE
}

func (m *LinkRequest_UnitRequest) GetId1() *PortIdentifier {
	if m != nil {
		return m.Id1
	}
	return nil
}

func (m *LinkRequest_UnitRequest) GetId2() *PortIdentifier {
	if m != nil {
		return m.Id2
	}
	return nil
}

type UpdateRequest struct {
	Items []*UpdateRequest_UnitRequest `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateRequest) GetItems() []*UpdateRequest_UnitRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type UpdateRequest_UnitRequest struct {
	Identifier *NodeIdentifier `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Data       *RequestData    `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *UpdateRequest_UnitRequest) Reset()                    { *m = UpdateRequest_UnitRequest{} }
func (m *UpdateRequest_UnitRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest_UnitRequest) ProtoMessage()               {}
func (*UpdateRequest_UnitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *UpdateRequest_UnitRequest) GetIdentifier() *NodeIdentifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *UpdateRequest_UnitRequest) GetData() *RequestData {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetStateRequest struct {
	Items []*GetStateRequest_UnitRequest `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *GetStateRequest) Reset()                    { *m = GetStateRequest{} }
func (m *GetStateRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStateRequest) ProtoMessage()               {}
func (*GetStateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetStateRequest) GetItems() []*GetStateRequest_UnitRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetStateRequest_UnitRequest struct {
	Identifier *NodeIdentifier `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	// optional field neccessary if complete state is not required
	RequiredFields []string `protobuf:"bytes,2,rep,name=requiredFields" json:"requiredFields,omitempty"`
}

func (m *GetStateRequest_UnitRequest) Reset()                    { *m = GetStateRequest_UnitRequest{} }
func (m *GetStateRequest_UnitRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStateRequest_UnitRequest) ProtoMessage()               {}
func (*GetStateRequest_UnitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }

func (m *GetStateRequest_UnitRequest) GetIdentifier() *NodeIdentifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *GetStateRequest_UnitRequest) GetRequiredFields() []string {
	if m != nil {
		return m.RequiredFields
	}
	return nil
}

type CreateRequest struct {
	Items []*CreateRequest_UnitRequest `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateRequest) GetItems() []*CreateRequest_UnitRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateRequest_UnitRequest struct {
	NodeName string       `protobuf:"bytes,1,opt,name=nodeName" json:"nodeName,omitempty"`
	NodeType string       `protobuf:"bytes,2,opt,name=nodeType" json:"nodeType,omitempty"`
	Data     *RequestData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *CreateRequest_UnitRequest) Reset()                    { *m = CreateRequest_UnitRequest{} }
func (m *CreateRequest_UnitRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest_UnitRequest) ProtoMessage()               {}
func (*CreateRequest_UnitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10, 0} }

func (m *CreateRequest_UnitRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *CreateRequest_UnitRequest) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

func (m *CreateRequest_UnitRequest) GetData() *RequestData {
	if m != nil {
		return m.Data
	}
	return nil
}

type Identifiers struct {
	Ids []*NodeIdentifier `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
}

func (m *Identifiers) Reset()                    { *m = Identifiers{} }
func (m *Identifiers) String() string            { return proto.CompactTextString(m) }
func (*Identifiers) ProtoMessage()               {}
func (*Identifiers) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Identifiers) GetIds() []*NodeIdentifier {
	if m != nil {
		return m.Ids
	}
	return nil
}

type PortIdentifier struct {
	NodeIdentifier *NodeIdentifier `protobuf:"bytes,1,opt,name=nodeIdentifier" json:"nodeIdentifier,omitempty"`
	PortTag        string          `protobuf:"bytes,2,opt,name=portTag" json:"portTag,omitempty"`
}

func (m *PortIdentifier) Reset()                    { *m = PortIdentifier{} }
func (m *PortIdentifier) String() string            { return proto.CompactTextString(m) }
func (*PortIdentifier) ProtoMessage()               {}
func (*PortIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *PortIdentifier) GetNodeIdentifier() *NodeIdentifier {
	if m != nil {
		return m.NodeIdentifier
	}
	return nil
}

func (m *PortIdentifier) GetPortTag() string {
	if m != nil {
		return m.PortTag
	}
	return ""
}

type NodeIdentifier struct {
	Id       int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	NodeType string `protobuf:"bytes,2,opt,name=nodeType" json:"nodeType,omitempty"`
}

func (m *NodeIdentifier) Reset()                    { *m = NodeIdentifier{} }
func (m *NodeIdentifier) String() string            { return proto.CompactTextString(m) }
func (*NodeIdentifier) ProtoMessage()               {}
func (*NodeIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *NodeIdentifier) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NodeIdentifier) GetNodeType() string {
	if m != nil {
		return m.NodeType
	}
	return ""
}

type RequestData struct {
	DArgs   []float64          `protobuf:"fixed64,1,rep,packed,name=dArgs" json:"dArgs,omitempty"`
	SArgs   []string           `protobuf:"bytes,2,rep,name=sArgs" json:"sArgs,omitempty"`
	DKwargs map[string]float64 `protobuf:"bytes,3,rep,name=dKwargs" json:"dKwargs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	SKwargs map[string]string  `protobuf:"bytes,4,rep,name=sKwargs" json:"sKwargs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *RequestData) Reset()                    { *m = RequestData{} }
func (m *RequestData) String() string            { return proto.CompactTextString(m) }
func (*RequestData) ProtoMessage()               {}
func (*RequestData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RequestData) GetDArgs() []float64 {
	if m != nil {
		return m.DArgs
	}
	return nil
}

func (m *RequestData) GetSArgs() []string {
	if m != nil {
		return m.SArgs
	}
	return nil
}

func (m *RequestData) GetDKwargs() map[string]float64 {
	if m != nil {
		return m.DKwargs
	}
	return nil
}

func (m *RequestData) GetSKwargs() map[string]string {
	if m != nil {
		return m.SKwargs
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "nodeservice.Empty")
	proto.RegisterType((*StateResponse)(nil), "nodeservice.StateResponse")
	proto.RegisterType((*StateResponse_UnitResponse)(nil), "nodeservice.StateResponse.UnitResponse")
	proto.RegisterType((*ModifyResponse)(nil), "nodeservice.ModifyResponse")
	proto.RegisterType((*ModifyResponse_UnitResponse)(nil), "nodeservice.ModifyResponse.UnitResponse")
	proto.RegisterType((*BaseResponse)(nil), "nodeservice.BaseResponse")
	proto.RegisterType((*NodeState)(nil), "nodeservice.NodeState")
	proto.RegisterType((*ServiceDescription)(nil), "nodeservice.ServiceDescription")
	proto.RegisterType((*NodeDescription)(nil), "nodeservice.NodeDescription")
	proto.RegisterType((*LinkRequest)(nil), "nodeservice.LinkRequest")
	proto.RegisterType((*LinkRequest_UnitRequest)(nil), "nodeservice.LinkRequest.UnitRequest")
	proto.RegisterType((*UpdateRequest)(nil), "nodeservice.UpdateRequest")
	proto.RegisterType((*UpdateRequest_UnitRequest)(nil), "nodeservice.UpdateRequest.UnitRequest")
	proto.RegisterType((*GetStateRequest)(nil), "nodeservice.GetStateRequest")
	proto.RegisterType((*GetStateRequest_UnitRequest)(nil), "nodeservice.GetStateRequest.UnitRequest")
	proto.RegisterType((*CreateRequest)(nil), "nodeservice.CreateRequest")
	proto.RegisterType((*CreateRequest_UnitRequest)(nil), "nodeservice.CreateRequest.UnitRequest")
	proto.RegisterType((*Identifiers)(nil), "nodeservice.Identifiers")
	proto.RegisterType((*PortIdentifier)(nil), "nodeservice.PortIdentifier")
	proto.RegisterType((*NodeIdentifier)(nil), "nodeservice.NodeIdentifier")
	proto.RegisterType((*RequestData)(nil), "nodeservice.RequestData")
	proto.RegisterEnum("nodeservice.LinkType", LinkType_name, LinkType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for NodeService service

type NodeServiceClient interface {
	CreateNodes(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*ModifyResponse, error)
	UpdateNodes(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*ModifyResponse, error)
	DeleteNodes(ctx context.Context, in *Identifiers, opts ...grpc.CallOption) (*ModifyResponse, error)
	GetNodes(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*StateResponse, error)
	Process(ctx context.Context, in *Identifiers, opts ...grpc.CallOption) (*ModifyResponse, error)
	Link(ctx context.Context, in *LinkRequest, opts ...grpc.CallOption) (*ModifyResponse, error)
	GetDescription(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceDescription, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) CreateNodes(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*ModifyResponse, error) {
	out := new(ModifyResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/CreateNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) UpdateNodes(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*ModifyResponse, error) {
	out := new(ModifyResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/UpdateNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) DeleteNodes(ctx context.Context, in *Identifiers, opts ...grpc.CallOption) (*ModifyResponse, error) {
	out := new(ModifyResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/DeleteNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetNodes(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*StateResponse, error) {
	out := new(StateResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/GetNodes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) Process(ctx context.Context, in *Identifiers, opts ...grpc.CallOption) (*ModifyResponse, error) {
	out := new(ModifyResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/Process", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) Link(ctx context.Context, in *LinkRequest, opts ...grpc.CallOption) (*ModifyResponse, error) {
	out := new(ModifyResponse)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/Link", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) GetDescription(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServiceDescription, error) {
	out := new(ServiceDescription)
	err := grpc.Invoke(ctx, "/nodeservice.NodeService/GetDescription", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NodeService service

type NodeServiceServer interface {
	CreateNodes(context.Context, *CreateRequest) (*ModifyResponse, error)
	UpdateNodes(context.Context, *UpdateRequest) (*ModifyResponse, error)
	DeleteNodes(context.Context, *Identifiers) (*ModifyResponse, error)
	GetNodes(context.Context, *GetStateRequest) (*StateResponse, error)
	Process(context.Context, *Identifiers) (*ModifyResponse, error)
	Link(context.Context, *LinkRequest) (*ModifyResponse, error)
	GetDescription(context.Context, *Empty) (*ServiceDescription, error)
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_CreateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).CreateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/CreateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).CreateNodes(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_UpdateNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).UpdateNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/UpdateNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).UpdateNodes(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_DeleteNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifiers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).DeleteNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/DeleteNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).DeleteNodes(ctx, req.(*Identifiers))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/GetNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetNodes(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifiers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Process(ctx, req.(*Identifiers))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_Link_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Link(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/Link",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Link(ctx, req.(*LinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_GetDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).GetDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeservice.NodeService/GetDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).GetDescription(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeservice.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNodes",
			Handler:    _NodeService_CreateNodes_Handler,
		},
		{
			MethodName: "UpdateNodes",
			Handler:    _NodeService_UpdateNodes_Handler,
		},
		{
			MethodName: "DeleteNodes",
			Handler:    _NodeService_DeleteNodes_Handler,
		},
		{
			MethodName: "GetNodes",
			Handler:    _NodeService_GetNodes_Handler,
		},
		{
			MethodName: "Process",
			Handler:    _NodeService_Process_Handler,
		},
		{
			MethodName: "Link",
			Handler:    _NodeService_Link_Handler,
		},
		{
			MethodName: "GetDescription",
			Handler:    _NodeService_GetDescription_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node_service.proto",
}

func init() { proto.RegisterFile("node_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 998 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0x51, 0x6f, 0xe3, 0x44,
	0x10, 0xae, 0xed, 0xa4, 0x4d, 0xc6, 0x49, 0x1a, 0x56, 0x70, 0x0a, 0xbe, 0x93, 0xa8, 0x2c, 0x38,
	0x2a, 0x74, 0x17, 0xe9, 0xc2, 0x0b, 0x2a, 0xbd, 0x2b, 0xd7, 0x24, 0x4d, 0xab, 0xeb, 0xf5, 0x2a,
	0xbb, 0x07, 0x12, 0x2f, 0x27, 0xb7, 0xde, 0x2b, 0x4b, 0x53, 0x3b, 0xe7, 0xdd, 0x1c, 0x44, 0xe2,
	0xb7, 0xf0, 0x7c, 0xef, 0xfc, 0x03, 0x24, 0x04, 0xbf, 0x85, 0xff, 0x80, 0x40, 0xbb, 0x6b, 0x3b,
	0xbb, 0x89, 0x9b, 0xa4, 0xc0, 0x9b, 0x77, 0xf6, 0xfb, 0x3e, 0xcf, 0xcc, 0xee, 0xcc, 0xd8, 0x80,
	0xa2, 0x38, 0xc4, 0xaf, 0x28, 0x4e, 0xde, 0x92, 0x0b, 0xdc, 0x1e, 0x25, 0x31, 0x8b, 0x91, 0xcd,
	0x6d, 0xa9, 0xc9, 0xdd, 0x80, 0x72, 0xff, 0x7a, 0xc4, 0x26, 0xee, 0x3b, 0x13, 0xea, 0x3e, 0x0b,
	0x18, 0xf6, 0x30, 0x1d, 0xc5, 0x11, 0xc5, 0xe8, 0x21, 0x94, 0xce, 0x03, 0x8a, 0x5b, 0xc6, 0x96,
	0xb1, 0x6d, 0x77, 0x3e, 0x6c, 0x2b, 0xb4, 0xf6, 0x7e, 0x40, 0x73, 0xa0, 0x27, 0x60, 0xe8, 0x31,
	0x94, 0x09, 0xc3, 0xd7, 0xb4, 0x65, 0x6e, 0x59, 0xdb, 0x76, 0xe7, 0x53, 0x0d, 0xaf, 0x29, 0xb7,
	0x5f, 0x46, 0x84, 0xe5, 0x6c, 0xc9, 0x72, 0xde, 0x19, 0x50, 0x53, 0xed, 0xb7, 0x7d, 0xfd, 0x97,
	0x00, 0x24, 0xc4, 0x11, 0x23, 0xaf, 0x09, 0x4e, 0x5a, 0xa6, 0x20, 0xdd, 0xd5, 0x48, 0x27, 0x71,
	0x88, 0x8f, 0x72, 0x88, 0xa7, 0xc0, 0xd1, 0x03, 0x28, 0x53, 0xee, 0x61, 0xcb, 0x12, 0xbc, 0x3b,
	0x73, 0x3c, 0xe9, 0xbf, 0x04, 0xb9, 0x7f, 0x19, 0xd0, 0x78, 0x1e, 0x87, 0xe4, 0xf5, 0xe4, 0xdf,
	0x3a, 0xfb, 0x44, 0xcf, 0xd5, 0xb6, 0x86, 0xd7, 0xa5, 0x0b, 0x93, 0xf5, 0xd3, 0x4c, 0xae, 0x1e,
	0x83, 0x3d, 0x8d, 0x86, 0xb6, 0x0c, 0xa1, 0xba, 0x30, 0x7a, 0x15, 0x9f, 0x7b, 0x6f, 0xae, 0xe4,
	0xbd, 0x7b, 0x08, 0x35, 0xd5, 0x8a, 0xee, 0xc0, 0x3a, 0x4f, 0xcc, 0x98, 0x8a, 0xf0, 0xcb, 0x5e,
	0xba, 0x42, 0x5b, 0x60, 0x87, 0x98, 0x5e, 0x24, 0x64, 0xc4, 0x48, 0x1c, 0x09, 0xf5, 0xaa, 0xa7,
	0x9a, 0xdc, 0x3f, 0x2c, 0xa8, 0xe6, 0xe9, 0x45, 0x08, 0x4a, 0x51, 0x70, 0x2d, 0x93, 0x58, 0xf5,
	0xc4, 0x33, 0xea, 0x42, 0x35, 0x1a, 0x5f, 0x7f, 0x1d, 0x0c, 0xc7, 0x38, 0xcb, 0xd6, 0x27, 0xc5,
	0xa7, 0xd3, 0x3e, 0xc9, 0x70, 0xfd, 0x88, 0x25, 0x13, 0x6f, 0xca, 0x43, 0xc7, 0x50, 0xa3, 0x2c,
	0x21, 0xd1, 0x65, 0xaa, 0x63, 0x15, 0x64, 0x7d, 0xaa, 0xe3, 0x2b, 0x50, 0x29, 0xa5, 0xb1, 0xd1,
	0x57, 0x50, 0xb9, 0xf8, 0x8e, 0x0c, 0xc3, 0x04, 0x47, 0xad, 0x92, 0x50, 0xfa, 0xf8, 0x06, 0xa5,
	0x6e, 0x0a, 0x93, 0x2a, 0x39, 0xcb, 0xd9, 0x85, 0x86, 0xee, 0x2c, 0x6a, 0x82, 0x75, 0x85, 0x27,
	0x69, 0xe4, 0xfc, 0x11, 0xbd, 0x0f, 0xe5, 0xb7, 0x1c, 0x20, 0xd2, 0x66, 0x78, 0x72, 0xb1, 0x63,
	0x7e, 0x61, 0x38, 0x7b, 0xf0, 0xde, 0x9c, 0x8b, 0xcb, 0x04, 0xaa, 0xaa, 0x80, 0x0f, 0x75, 0xcd,
	0xb3, 0x02, 0xf2, 0x03, 0x95, 0xbc, 0xa0, 0x20, 0x72, 0x51, 0xf7, 0x7b, 0x40, 0xbe, 0xdc, 0xef,
	0x4d, 0x0f, 0x78, 0xf6, 0x0a, 0x18, 0x73, 0x57, 0x00, 0x75, 0xa0, 0x2c, 0xb4, 0xd3, 0xc3, 0xbd,
	0x37, 0xf7, 0x26, 0x45, 0xce, 0x93, 0x50, 0x77, 0x00, 0x9b, 0x33, 0x3b, 0xfc, 0xee, 0xb0, 0xc9,
	0x28, 0xbf, 0x3b, 0xfc, 0x79, 0x85, 0xfb, 0xf7, 0xa7, 0x01, 0xf6, 0x31, 0x89, 0xae, 0x3c, 0xfc,
	0x66, 0x8c, 0x29, 0x43, 0x3b, 0x59, 0x5d, 0x1a, 0x05, 0xe7, 0xaa, 0x00, 0xd3, 0xa2, 0x14, 0xcf,
	0x59, 0x4d, 0xfe, 0x6c, 0x80, 0xad, 0x98, 0xd1, 0x23, 0xa8, 0x0c, 0x49, 0x74, 0x75, 0x96, 0x79,
	0xd5, 0xe8, 0x7c, 0x30, 0x27, 0xc7, 0x37, 0xbd, 0x1c, 0x86, 0x1e, 0x82, 0x45, 0xc2, 0x47, 0x85,
	0xcd, 0xeb, 0x34, 0x4e, 0x98, 0x52, 0xbe, 0x1c, 0x27, 0xe1, 0x9d, 0xb4, 0x67, 0x2d, 0x83, 0x77,
	0xdc, 0xdf, 0x0d, 0xa8, 0xbf, 0x1c, 0x85, 0xa2, 0x11, 0x4b, 0x17, 0x77, 0xf5, 0x70, 0xef, 0x6b,
	0x12, 0x1a, 0xb4, 0x28, 0xe0, 0x1f, 0xf5, 0x78, 0xf5, 0x06, 0x6c, 0xdc, 0xb6, 0x01, 0x97, 0xc2,
	0x80, 0x05, 0x69, 0xe8, 0x2d, 0x8d, 0x96, 0xbe, 0xa0, 0x17, 0xb0, 0xc0, 0x13, 0x28, 0xf7, 0x37,
	0x03, 0x36, 0x07, 0x98, 0xa5, 0x43, 0x45, 0xbe, 0xfe, 0x89, 0x1e, 0x8b, 0x5e, 0xdc, 0x33, 0xe0,
	0xa2, 0x68, 0x92, 0xff, 0x31, 0x9a, 0xfb, 0xd0, 0x48, 0xf0, 0x9b, 0x31, 0x49, 0x70, 0x78, 0x40,
	0xf0, 0x30, 0x94, 0x97, 0xbb, 0xea, 0xcd, 0x58, 0xdd, 0x5f, 0x0d, 0xa8, 0x77, 0x13, 0xbc, 0xea,
	0x89, 0x68, 0xd0, 0xa2, 0x18, 0xa8, 0x1e, 0x83, 0x03, 0x15, 0x4e, 0x3f, 0x99, 0xf6, 0xd4, 0x7c,
	0x9d, 0xed, 0x89, 0xdb, 0x69, 0x4e, 0xf7, 0xc4, 0x35, 0xcc, 0x0e, 0xc3, 0x5a, 0xe9, 0x30, 0x76,
	0xc1, 0x3e, 0xd2, 0x66, 0x89, 0x45, 0xc2, 0x95, 0x46, 0x10, 0xc7, 0xb9, 0x31, 0x34, 0xf4, 0xbb,
	0x8a, 0xba, 0xd0, 0x88, 0x34, 0xe0, 0x2a, 0xd9, 0x9f, 0xa1, 0xa0, 0x16, 0x6c, 0x8c, 0xe2, 0x84,
	0x9d, 0x05, 0x97, 0x69, 0x74, 0xd9, 0xd2, 0xe5, 0xbd, 0x57, 0xc7, 0x36, 0xc0, 0x24, 0x61, 0x3a,
	0xba, 0x4c, 0x12, 0x2e, 0x4a, 0x8d, 0xfb, 0x8b, 0x09, 0xb6, 0x92, 0x02, 0xde, 0x64, 0xc3, 0xa7,
	0xc9, 0xa5, 0x8c, 0xd7, 0xf0, 0xe4, 0x82, 0x5b, 0xa9, 0xb0, 0xca, 0x63, 0x97, 0x0b, 0xb4, 0x07,
	0x1b, 0xe1, 0xb3, 0x1f, 0x02, 0x6e, 0xb7, 0x0a, 0x06, 0x99, 0x22, 0xdb, 0xee, 0x49, 0x9c, 0x9c,
	0x1b, 0x19, 0x8b, 0x0b, 0xd0, 0x54, 0xa0, 0xb4, 0x44, 0xc0, 0xd7, 0x04, 0x52, 0x96, 0xb3, 0x03,
	0x35, 0x55, 0xf9, 0x56, 0x53, 0x67, 0x07, 0x6a, 0xfe, 0x2d, 0xb8, 0xea, 0xc0, 0xf9, 0xec, 0x00,
	0x2a, 0x59, 0xb7, 0x43, 0x00, 0xeb, 0xfe, 0xd1, 0xf3, 0xd3, 0xe3, 0x7e, 0x73, 0x0d, 0x35, 0x00,
	0xbe, 0xe9, 0x3f, 0x7d, 0xf6, 0xea, 0xe0, 0xc8, 0xf3, 0xcf, 0x9a, 0x06, 0xda, 0x04, 0x5b, 0xac,
	0xfd, 0x7e, 0xf7, 0xc5, 0x49, 0xaf, 0x69, 0xa2, 0x3a, 0x54, 0x85, 0x61, 0xff, 0xc5, 0xd9, 0x61,
	0xd3, 0xea, 0xfc, 0x6d, 0x81, 0x2d, 0x86, 0x8f, 0x8c, 0x18, 0x1d, 0x82, 0x2d, 0x6b, 0x82, 0x1b,
	0x29, 0x72, 0x6e, 0xae, 0x16, 0xe7, 0xee, 0x82, 0x4f, 0x2c, 0x77, 0x8d, 0x2b, 0xc9, 0x7e, 0x57,
	0xa4, 0xa4, 0x75, 0xc2, 0x65, 0x4a, 0x07, 0x60, 0xf7, 0xf0, 0x10, 0x67, 0x4a, 0x7a, 0xf5, 0x28,
	0x85, 0xb2, 0x5c, 0xa7, 0x32, 0xc0, 0x4c, 0x8a, 0xdc, 0x5b, 0xd4, 0xcc, 0x1c, 0xe7, 0xe6, 0x2f,
	0x6d, 0x77, 0x0d, 0xed, 0xc3, 0xc6, 0x69, 0x12, 0x5f, 0x60, 0xfa, 0x1f, 0x7c, 0xd9, 0x83, 0x12,
	0x3f, 0xbf, 0x19, 0x01, 0x65, 0x1e, 0x2e, 0x13, 0x18, 0x40, 0x63, 0x80, 0x99, 0x36, 0xaf, 0x35,
	0x82, 0xf8, 0x05, 0x71, 0x3e, 0xd2, 0x03, 0x99, 0xfb, 0x9a, 0x70, 0xd7, 0xf6, 0x4b, 0xdf, 0x9a,
	0xa3, 0xf3, 0xf3, 0x75, 0xf1, 0x23, 0xf3, 0xf9, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x16, 0x3a,
	0xc3, 0xfe, 0xde, 0x0c, 0x00, 0x00,
}
