syntax = "proto3";
package networkservice;
option go_package="pb";
import "node_service.proto";

service NetworkService {
    rpc CreateNetwork (GraphCreateRequest) returns (GraphModifyResponse) {};
    rpc UpdateNetwork (GraphUpdateRequest) returns (GraphModifyResponse) {};
    rpc DeleteNetwork (NetworkIdentifier) returns (GraphModifyResponse) {};
    rpc Process (GraphProcessRequest) returns (GraphModifyResponse) {};
    rpc Solve (GraphSolveRequest) returns (GraphModifyResponse) {};
    rpc GetState (GraphStateRequest) returns (GraphStateResponse) {};
    rpc GetDescription (nodeservice.Empty) returns (NetworkDescription) {};
}

message NetworkDescription {
    repeated nodeservice.ServiceDescription items = 1;
}

message GraphStateResponse {
    map<string, nodeservice.NodeState> states = 1;
}

message GraphModifyResponse {
    nodeservice.BaseResponse base = 1;
    NetworkIdentifier identifier = 2;
}

message GraphStateRequest {
    repeated string requiredNodes = 1;
}

message GraphSolveRequest {
    NetworkIdentifier identifier = 1;
    nodeservice.PortIdentifier vectorPotrt = 2;
    SolutionOptions solutionOptions = 3;
}

message GraphProcessRequest {
    NetworkIdentifier identifier = 1;
    ProcessOptions processOptions = 2;
}

message SolutionOptions {
    SolverTypes solverType = 1;
    repeated double init = 2;
    double precision = 3;
    double relaxCoef = 4;
    int32 iterLimit = 5;

    ProcessOptions processOptions = 6;

    enum SolverTypes {
        NEWTON = 0;
    }
}

message ProcessOptions {
    double relaxCoef = 1;
    double precision = 4;
    int32 skipIterations = 2;
    int32 iterNum = 3;
}

message GraphUpdateRequest {
    NetworkIdentifier identifier = 1;
    map<string, nodeservice.RequestData> nodeUpdates = 2;
}

message GraphCreateRequest {
    map<string, nodeservice.RequestData> nodeRequests = 1;
    repeated nodeservice.LinkRequest.UnitRequest linkRequests = 2;
    repeated VariatorIdentifier variators = 3;
}

message VariatorIdentifier {
    string nodeName = 1;
    string variableName = 2;
}

message NetworkIdentifier {
    int32 id = 1;
}